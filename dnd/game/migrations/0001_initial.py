# Generated by Django 3.1.5 on 2021-05-16 20:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import dnd.base.validator
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('feed', '0002_auto_20210406_1103'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='feed.post')),
                ('title', models.CharField(error_messages={'invalid': 'Invalid title. letters, numbers, dash and space only'}, help_text='150 characters or fewer. Letters, number, dash and space only.', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-0-9a-zA-Z]*$'), code='invalid', message='Enter a valid title consisting of letters, number, - and space only.')], verbose_name='title')),
                ('max_player', models.PositiveSmallIntegerField(error_messages={'max_value': '250 is the maximum number of player allowed in a campaign', 'min_value': 'You need to allow a least 1 player to join'}, help_text='Number maximum of player in this campaign, 1 to 250', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(251)], verbose_name='maximum number of player')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'open'), (2, 'close'), (3, 'archived')], default=1, verbose_name='status')),
                ('link_world', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='world anvil link', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='world anvil')),
                ('default_link_vtable', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='virtual table link', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='virtual table link')),
                ('default_link_vocal', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='discord voice channel link', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='discord voice channel')),
                ('details', models.TextField(help_text='details', verbose_name='details')),
            ],
            bases=('feed.post',),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='feed.post')),
                ('name', models.CharField(error_messages={'invalid': 'Invalid name. letters, numbers, dash and space only'}, help_text='150 characters or fewer. Letters, number, dash and space only.', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-0-9a-zA-Z]*$'), code='invalid', message='Enter a valid title consisting of letters, number, - and space only.')], verbose_name='name')),
                ('character_class', models.CharField(help_text='150 characters or fewer.', max_length=150, verbose_name='class')),
                ('character_race', models.CharField(help_text='150 characters or fewer.', max_length=150, verbose_name='race')),
                ('character_level', models.PositiveSmallIntegerField(error_messages={'max_value': '40 (two class level 20) is currently the maximum level', 'min_value': 'You can be level 0'}, help_text='Number maximum of player in this campaign, 1 to 40', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(40)], verbose_name='character level')),
                ('link_sheet', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='link to your character sheet', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='sheet link')),
                ('pdf_sheet', models.FileField(blank=True, error_messages={'invalid': 'Invalid file extension.'}, help_text='pdf of your character sheet', upload_to='', validators=[dnd.base.validator.extension_validator], verbose_name='sheet pdf')),
                ('rule', models.TextField(help_text='Rule aplided on your charter separat by a ; . Ex : PHP+1; Stat array; ... ', verbose_name='rule')),
                ('details', models.TextField(help_text='details', verbose_name='details')),
                ('in_campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='in_campaign', to='game.campaign')),
            ],
            bases=('feed.post',),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='feed.post')),
                ('title', models.CharField(blank=True, error_messages={'invalid': 'Invalid title. letters, numbers, dash and space only'}, help_text='150 characters or fewer. Letters, number, dash and space only.', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-0-9a-zA-Z]*$'), code='invalid', message='Enter a valid title consisting of letters, number, - and space only.')], verbose_name='title')),
                ('date', models.DateField(verbose_name='play date')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'in waiting'), (2, 'validated'), (3, 'refused'), (4, 'archived')], default=1, verbose_name='status')),
                ('link_vtable', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='virtual table link', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='virtual table link')),
                ('link_vocal', models.CharField(blank=True, error_messages={'invalid': 'Invalid link.'}, help_text='discord voice channel link', max_length=250, validators=[django.core.validators.URLValidator], verbose_name='discord voice channel')),
                ('for_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='for_campaign', to='game.campaign')),
            ],
            bases=('feed.post',),
        ),
        migrations.CreateModel(
            name='SessionsCharacterStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'in waiting'), (2, 'validated'), (3, 'refused'), (4, 'archived')], default=1, verbose_name='status')),
                ('lock', models.BooleanField(default=False, verbose_name='is locked')),
                ('update_date', models.DateField(auto_now=True, verbose_name='creation date')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character', to='game.character')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session', to='game.session')),
            ],
        ),
    ]
